@startuml lwos overview

class Scheduler{
    {field} -tasks[]

    {method} +add(func: &'a mut dyn Execute, state: TaskState)
    {method} +remove(id: TaskId)
    {method} +get(id: TaskId)
    {method} +process()
}


class Task{
    {field} +state: TaskState
    {field} +id: TaskId (uint8)
    {field} +func: Execute

    {method} +process(id: TaskId)
    {method} +suspend()
    {method} +resume()  
}

enum TaskState{
    WAITING
    SUSPENDED
    RUNNING
}

interface Execute {
    {method} +execute(&mut self, _id lwos:TaskId): void
}

class PrintExecuter{
}

class NopExecuter{

}


Scheduler "1" -- "*"Task
Task "1" -- "1" Execute
Task "1" -- "1" TaskState

Execute <|.. PrintExecuter
Execute <|.. NopExecuter

@enduml